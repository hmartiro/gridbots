
# Get into tree placement position
<units1&2_buffer_reverse
<units1&2_tree_ready
<units1&2_buffer_reverse

# ---------------------------------
# Build trees
# ---------------------------------

stagerel(-6, 0, 0)

# Build three on base layer
<units1&2_tree_int
<unit2_tree_int_AH.txt
stagerel(0, -24, 0)
#wait(1)

stagerel(0, 12, 12)
#wait(1)

# Build three on second layer
<units1&2_tree_int
<unit2_tree_int_AH.txt
stagerel(0, -24, 0)
#wait(1)

stagerel(0, 12, 12)
#wait(1)

# Build three on third layer
<units1&2_tree_int
<unit2_tree_int_AH.txt
stagerel(0, -24, 0)
#wait(1)

stagerel(6, 0, 0)

# ---------------------------------
# Verts
# ---------------------------------

# Fix the glue gap
stagerel(1, -1, 0)

stagerel(8,0,0)
#wait(1)
stagerel(0, 0, -24)
#wait(1)
<units1&2_buffer_advance
<units1&2_buffer_advance

stagerel(0, 12, 2)
#wait(1)
<units1&2_vert_int
<unit2_vert_int

stagerel(0, -24, 12)
#wait(1)
<units1&2_vert_int
<unit2_vert_int

# Fix the glue gap
stagerel(-1, 1, 0)

# ---------------------------------
# Horz
# ---------------------------------

# This is for rod alignment asymmetry ?
stagerel(0, -2, 0)

# Vert to horz
# ---------------
stagerel(0,-24, -24)

<units1&2_buffer_advance
#<units1&2_getsolv_long

<units1&2_buffer_reverse
#<units1&2_getsolv_long

<units1&2_buffer_reverse
<units1&2_horz_ready

<units1&2_buffer_reverse
<units1&2_buffer_reverse
# ----------------

stagerel(0, 0, 12)
stagerel(0, 0, -2)

<unit2_horz_int
<unit2_horz_int

stagerel(0, -24, 12)

<unit2_horz_int
<unit2_horz_int

stagerel(0, -24, 12)

<unit2_horz_int
<unit2_horz_int

# This is for rod alignment asymmetry ?
stagerel(0, +2, 0)
